def __mean(self)->None:
        self.mean:pd.core.series.Series = self.df.mean(numeric_only=True)
        self.mean.to_csv(r'output\mean.csv')
    
    def __median(self)->None:
        self.median:pd.core.series.Series = self.df.median(numeric_only=True)
        self.median.to_csv(r'output\median.csv')
    
    def __mode(self)->None:
        self.mode:pd.core.series.Series = self.df.mode(numeric_only=True)
        self.mode.to_csv(r'output\mode.csv')
    
    def __std(self)->None:
        self.std:pd.core.series.Series = self.df.std(numeric_only=True)
        self.std.to_csv(r'output\std.csv')
    
    def __skew(self)->None:
        self.skew:pd.core.series.Series = self.df.skew(numeric_only=True)
        self.skew.to_csv(r'output\skew.csv')
    
    def __kurt(self)->None:
        self.kurt:pd.core.series.Series = self.df.kurt(numeric_only=True)
        self.kurt.to_csv(r'output\kurt.csv')


        for col in range(3):
                feature = self.feature_list[count]
                y = self.df[feature]
                sns.boxplot(data=self.df, y=y,ax=axes[row][col],width=0.2)
                axes[row][col].set_title(f'Boxplot for {feature}')
                axes[row][col].set_xlabel(f'{feature}')
                count += 1
            
            count = row+1
            count *= 10